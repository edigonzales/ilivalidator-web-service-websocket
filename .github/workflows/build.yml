name: CI/CD

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Build with Gradle
        run: ./gradlew clean build dockerTest --fail-fast 
        #run: ./gradlew clean build buildDockerImage -x test -x dockerTest
        env:
          BUILD_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports
          path: build/reports/tests/

      - name: Push docker image
        run: |
          export CI_JOB_TIMESTAMP=$(date +%Y%m%dT%H%M%S)
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
          docker images
          ./gradlew pushDockerImages
        if: ${{ github.ref == 'refs/heads/master' }}  
        env:
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_ACCOUNT: sogis
          DOCKER_REPO: ilivalidator-web-service
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      