name: CI/CD

on:
  workflow_dispatch:
  push:

jobs:
  build:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: ilivalidator-web-service
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}
      VERSION: 1.4.${{ github.run_number }}
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'liberica'
          java-version: 11

      - name: Build and test
        id: build
        run: |
          ./gradlew clean build -x test
          ls -la build/libs/

      - name: Upload docker test reports
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports
          path: build/reports/tests/

      - name: Build and test docker image
        id: dockerbuild
        #run: ./gradlew buildImage dockerTest
        run: ./gradlew buildImage
        if: steps.build.outcome == 'success'

      - name: Upload docker test reports
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: reports
          path: build/reports/tests/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        #if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}



#    if: steps.build.outcome == 'success'

      # - name: Push docker image
      #   run: |
      #     export CI_JOB_TIMESTAMP=$(date +%Y%m%dT%H%M%S)
      #     echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      #     docker images
      #     ./gradlew pushDockerImages
      #   if: ${{ github.ref == 'refs/heads/master' }}  
      #   env:
      #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      #     DOCKER_ACCOUNT: sogis
      #     DOCKER_REPO: ilivalidator-web-service
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      